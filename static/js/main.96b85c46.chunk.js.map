{"version":3,"sources":["components/addBook.js","components/Edit.js","components/dashbord.js","components/bookList.js","App.js","index.js"],"names":["AddBook","useState","book","setBook","change","setChange","id","Math","random","className","action","name","onSubmit","e","preventDefault","target","reset","require","default","post","setTimeout","htmlFor","required","autoComplete","type","onChange","title","value","author","category","isbn","to","Edit","useParams","parseInt","Number","parseFloat","useEffect","get","then","resp","data","filter","el","onClick","axios","put","Dashbord","BookList","books","setBooks","empty","booksList","map","delete","removeFromList","length","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b85c46.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function AddBook() {\r\n\r\n    const [book, setBook] = useState( '' ); // book storage \r\n    const [change, setChange] = useState(false); // saving notification\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        e.target.reset();\r\n        // adding info about added book\r\n        const axios = require('axios').default;\r\n        axios.post('http://localhost:3000/posts',  {\r\n            book\r\n        })\r\n        // notification about saving\r\n        setChange(true)\r\n        setTimeout(() => { setChange(false) }, 1000);\r\n    }\r\n\r\n    const id = Math.random() // create id\r\n    return (\r\n        <div className=\"add-book-comp\">\r\n\r\n            { change ? <h1 className=\"modal\">Book added</h1> : null }\r\n\r\n            <h1>\r\n                Add book to List\r\n            </h1>\r\n\r\n            <form action=\"http://localhost:3000/posts\"\r\n                className=\"add-book-form\"\r\n                name=\"book\"\r\n                onSubmit={ handleSubmit } >\r\n\r\n                <label htmlFor=\"title\">Book name</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"title\"\r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    onChange={(e) => setBook({...book, title: e.target.value, id })}  />  {/* id - here setting individual id number */}\r\n\r\n                <label htmlFor=\"author\">Author name</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"author\"\r\n                    type=\"text\" \r\n                    name=\"author\"\r\n                    onChange={(e) => setBook({...book, author: e.target.value})} />\r\n                    \r\n                <label htmlFor=\"category\">Category</label>\r\n                <select \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    onChange={(e) => setBook({...book, category: e.target.value})}>\r\n                    <option value=\"\">-</option>\r\n                    <option value=\"Action and Adventure\">Action and Adventure</option>\r\n                    <option value=\"Classics\">Classics</option>\r\n                    <option value=\"Detective and Mystery\">Detective and Mystery</option>\r\n                    <option value=\"Historical Fiction\">Historical Fiction</option>\r\n                    <option value=\"Horror\">Horror</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"isbn\">ISBN</label>\r\n                <input \r\n                    required\r\n                    autoComplete=\"off\"\r\n                    id=\"isbn\"\r\n                    type=\"number\" \r\n                    name=\"isbn\"\r\n                    onChange={(e) => setBook({...book, isbn: e.target.value })} />\r\n\r\n                <div className=\"btn-grup-action\">\r\n\r\n                    <button className=\"add-book-btn btn\">\r\n                        Add book\r\n                    </button>\r\n\r\n                    <Link to={\"/books-app\"} >\r\n                        <button className=\"add-book-btn btn\">\r\n                            back to Book list\r\n                        </button>\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Edit() {\r\n    const id = useParams().id;\r\n    const parseInt = Number.parseFloat( id ); \r\n\r\n    const [book, setBook] = useState(''); // book storage \r\n    const [change, setChange] = useState(false); // saving notification\r\n\r\n    useEffect( () => {\r\n        const axios = require('axios').default;\r\n        axios.get('http://localhost:3000/posts')\r\n        .then(resp => {\r\n            const book = resp.data.filter( el => el.id === parseInt) //defining book for display\r\n            setBook(book[0].book)\r\n        })\r\n    }, [])\r\n    \r\n    function edit (e) {\r\n        e.preventDefault();\r\n\r\n        const axios = require('axios').default;\r\n        axios.put(`http://localhost:3000/posts/${parseInt}`,  { //defining item to make changes\r\n            book\r\n        })\r\n\r\n        if( axios ) { // notification about saving change\r\n            setChange(true)\r\n            setTimeout(() => { setChange(false) }, 1000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-book-form\">\r\n\r\n            { change ? <h1 className=\"modal\">Saved</h1> : null }\r\n\r\n            <label htmlFor=\"author\">Book name</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={book.title}\r\n                onChange={(e) => setBook({...book, title: e.target.value})} />\r\n\r\n            <label htmlFor=\"author\">Author name</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={book.author}\r\n                onChange={(e) => setBook({...book, author: e.target.value})} />\r\n\r\n            <label htmlFor=\"author\">Category</label>\r\n            <select \r\n                required\r\n                id=\"category\"\r\n                name=\"category\"\r\n                value={book.category}\r\n                onChange={(e) => setBook({...book, category: e.target.value})}>\r\n                <option value=\"other\">other</option>\r\n                <option value=\"Action and Adventure\">Action and Adventure</option>\r\n                <option value=\"Classics\">Classics</option>\r\n                <option value=\"Detective and Mystery\">Detective and Mystery</option>\r\n                <option value=\"Historical Fiction\">Historical Fiction</option>\r\n                <option value=\"Horror\">Horror</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"author\">ISBN</label>\r\n            <input \r\n                type=\"text\" \r\n                name=\"\" \r\n                id=\"\" \r\n                value={book.isbn}\r\n                onChange={(e) => setBook({...book, isbn: e.target.value})} />\r\n\r\n            <div className=\"btn-grup-action\">\r\n                \r\n                <button className=\"add-book-btn btn\" onClick={edit}>\r\n                    Set\r\n                </button>\r\n\r\n                <Link to={\"/books-app\"} >\r\n                    <button className=\"add-book-btn btn\">\r\n                        Cancel\r\n                    </button>\r\n                </Link> \r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}","\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Dashbord () {\r\n    return (\r\n        <div className=\"dashbord\">\r\n\r\n            <ul className=\"btn-grup-action\">\r\n\r\n                <Link to=\"/books-app\">\r\n                    <li className=\"add-book-btn\">\r\n                        All Books\r\n                    </li>\r\n                </Link>\r\n\r\n                <Link to=\"/add-book\">\r\n                    <li className=\"add-book-btn\">\r\n                        Add Book\r\n                    </li>\r\n                </Link>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function BookList() { \r\n\r\n    const [books, setBooks] = useState([]); \r\n    \r\n    useEffect( () => { // first array\r\n        const axios = require('axios').default;\r\n        axios.get('http://localhost:3000/posts')\r\n            .then(resp => {\r\n                setBooks(resp.data);\r\n            })\r\n    }, [])  \r\n    \r\n    const removeFromList = id => { //delet book \r\n        const axios = require('axios').default;\r\n        axios.delete(`http://localhost:3000/posts/${id}`)\r\n\r\n        axios.get('http://localhost:3000/posts') // sets second array (after deleting book)\r\n        .then(resp => {\r\n            setBooks(resp.data);\r\n        })\r\n    }\r\n\r\n    const empty = <h1>Your books list is empty, add book press on \"Add Book\"</h1>\r\n    const booksList =  \r\n        books && books.map( (el) => {\r\n            return(\r\n                <div className=\"book-wrapper\"  key={el.book.id}>\r\n                    <h3> {el.book.title} </h3>\r\n                    <span> author: {el.book.author} </span>\r\n                    <span>category: {el.book.category} </span>\r\n                    <span>ISBN: {el.book.isbn} </span>\r\n\r\n                    <div className=\"btn-grup-action\">\r\n                    \r\n                        <Link to={\"/Edit/\" + el.id } >\r\n                            <button className=\"add-book-btn btn\">\r\n                                Edit\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <button\r\n                            onClick={ () => removeFromList(el.id) }\r\n                            className=\"btn\">\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )\r\n    });\r\n    \r\n    return (\r\n        <div className=\"book-card\">\r\n            { books.length > 0 ? booksList : empty }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\n\nimport AddBook from './components/addBook'\nimport Edit from './components/Edit'\nimport Dashbord from './components/dashbord'\nimport BookList from './components/bookList'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n\n        <div className=\"header-title\">\n          <Link to={\"/books-app\"} >\n              <h1 className=\"main-title\">Book List</h1>\n          </Link>\n        </div>\n\n        <Dashbord/>\n\n        <Switch>\n          <Route exact path='/books-app' component={BookList}/>\n          <Route path='/add-book' component={AddBook}/>\n          <Route path='/Edit/:id' component={Edit}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}